<Window  Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"         
        xmlns:data="clr-namespace:DataMapping.Data;assembly=DataMapping"
        xmlns:classess="clr-namespace:EnsureRisk.Classess"
        x:Class="EnsureRisk.Windows.WindowCM"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EnsureRisk.Windows"
         xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Countermeasure"  Height="481" Width="680" ResizeMode="NoResize" Loaded="Window_Loaded" WindowStartupLocation="CenterScreen" Closing="Window_Closing">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" FillBehavior="HoldEnd" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    <Grid>
        <Button Name="BtnOK" Content="OK" HorizontalAlignment="Left" Height="25" Margin="449,405,0,0" VerticalAlignment="Top" Width="90" Click="BtnOK_Click" IsDefault="True" md:ShadowAssist.ShadowDepth="Depth5"/>
        <Button Name="BtnCancel" Content="Cancel" HorizontalAlignment="Left" Height="25" Margin="551,405,0,0" VerticalAlignment="Top" Width="90" Click="BtnCancel_Click" IsCancel="True" md:ShadowAssist.ShadowDepth="Depth5"/>
        <TextBox IsEnabled="{Binding Path = HasAccess}" md:HintAssist.Hint="Short Name" md:HintAssist.IsFloating="True" Name="TextName" MaxLength="250" HorizontalAlignment="Left" Margin="34,7,0,0" TextChanged="TextName_TextChanged" TextWrapping="Wrap"  VerticalAlignment="Top"  Width="288" MaxLines="1">
            <TextBox.Text>
                <Binding Path="ShortName" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <classes:NotEmptyValidationRule ValidatesOnTargetUpdated="True" xmlns:classes="clr-namespace:EnsureRisk.Classess"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox md:HintAssist.Hint="Father" md:HintAssist.IsFloating="True" x:Name="TextFather" HorizontalAlignment="Left" Margin="408,7,0,0" TextWrapping="Wrap"  VerticalAlignment="Top"  Height="38" Width="246" IsReadOnly="True" IsEnabled="False"/>
        <TextBox IsEnabled="{Binding Path = HasAccess}" md:HintAssist.Hint="Comments" md:HintAssist.IsFloating="True" Name="TextDetail" HorizontalAlignment="Left" Height="71" Margin="34,59,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="622" TextAlignment="Justify"/>
        <TabControl HorizontalAlignment="Left" Height="192" Margin="34,186,0,0" VerticalAlignment="Top" Width="620">
            <TabItem Header="Values" Name="tabValues" >
                <Grid>
                    <DataGrid Name="dgTopRisk" HorizontalAlignment="Left" Margin="1,1,0,0" VerticalAlignment="Top" AutoGenerateColumns="False">
                        <DataGrid.Resources>
                            <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                                <Setter Property="Padding" Value="-2"/>
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="True">
                                        <Setter Property="Background" Value="Red"/>
                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="WBSn" Header="WBS" Binding="{Binding Path= WBSName}" Width="*"/>
                            <DataGridTextColumn x:Name="TopRisk" Header="Damage" Binding="{Binding Path= Damage}" Width="*"/>
                            <DataGridTextColumn x:Name="TopValue" Header="Value" Width="*">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="value" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <classes:NegativeValidation ValidationStep="UpdatedValue" xmlns:classes="clr-namespace:EnsureRisk.Classess"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="WBS" Name="tabWBS" >
                <Grid Name="gridTabWBS" >
                    <DataGrid Name="dgWBS" CanUserDeleteRows="False" CanUserAddRows="False" HorizontalAlignment="Left" VerticalAlignment="Top" AutoGenerateColumns="False" SelectedCellsChanged="DgWBS_SelectedCellsChanged" LostFocus="DgWBS_LostFocus" SelectionChanged="DgWBS_SelectionChanged" CellEditEnding="DgWBS_CellEditEnding">
                        <DataGrid.Resources>
                            <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                                <Setter Property="Padding" Value="-2"/>
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="True">
                                        <Setter Property="Background" Value="Red"/>
                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="wbsBtn">
                                <DataGridTemplateColumn.Header>
                                    <Button Name="BtnAddWBS" Width="40" Height="40" ToolTip="Add WBS" Style="{StaticResource MaterialDesignFloatingActionDarkButton}" IsEnabled="{Binding Path = HasAccess}" VerticalAlignment="Top" Click="BtnAddWBS_Click" md:ShadowAssist.ShadowDepth="Depth5">
                                        <md:PackIcon Kind="Plus"/>
                                    </Button>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="BtnDelWBS" Height="20" Width="20" ToolTip="Delete row" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" IsEnabled="{Binding Path = HasAccess}" Click="BtnDelWBS_Click" md:ShadowAssist.ShadowDepth="Depth5">
                                            <md:PackIcon Kind="Trash"/>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn x:Name="Level" Header="Level" Binding="{Binding Path= Nivel}" Width="100" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="WBS" Header="WBS Name" Binding="{Binding Path= WBS_Name}" Width="*" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="WBSUser" Header="User" Binding="{Binding Path= userName}" Width="*" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="WBSProb" Header="Risk Red.(%)" Width="100" IsReadOnly="False">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="probability" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <classes:NegativePlusValidation ValidationStep="UpdatedValue" xmlns:classes="clr-namespace:EnsureRisk.Classess"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn x:Name="PRIMARY" Header="Primary">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ToggleButton IsEnabled="{Binding Path=HasAccess}" Width="20" Height="20" Checked="KeyToggleButtonChecked" Style="{StaticResource MaterialDesignActionToggleButton}" IsChecked="{Binding {x:Static data:DT_CM_WBS.IS_PRIMARY}}">
                                            <md:ToggleButtonAssist.OnContent>
                                                <md:PackIcon Kind="Key" Width="20" Height="20"/>
                                            </md:ToggleButtonAssist.OnContent>
                                        </ToggleButton>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Roles" Name="tabRoles" >
                <Grid Name="gridTabRoles" IsEnabled="{Binding Path = HasAccess}">
                    <DataGrid Name="dgRoles" HorizontalAlignment="Left" VerticalAlignment="Top"  AutoGenerateColumns="False" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="roleBtn">
                                <DataGridTemplateColumn.Header>
                                    <Button Name="BtnAdd" Style="{StaticResource MaterialDesignFloatingActionDarkButton}" ToolTip="Add Role" Width="40" Height="40" HorizontalAlignment="Left"  VerticalAlignment="Center" Click="BtnAddRole_Click" md:ShadowAssist.ShadowDepth="Depth5">
                                        <md:PackIcon Kind="Plus"/>
                                    </Button>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="BtnDel" ToolTip="Delete Row" Height="20" Width="20"  HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" VerticalAlignment="Top" Click="BtnDelRole_Click" md:ShadowAssist.ShadowDepth="Depth5">
                                            <md:PackIcon Kind="Trash"/>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn x:Name="Role" Header="Role" Binding="{Binding Path= Role}" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>
        <TextBox IsEnabled="True" x:Name="TextProbability" PreviewTextInput="NumberValidationTextBox" HorizontalAlignment="Left" Height="27" LostFocus="TextProbability_LostFocus" Margin="577,145,0,0" TextWrapping="Wrap" Text="{Binding Path = Probability}"  VerticalAlignment="Top" Width="73"  MaxLines="2" TextAlignment="Right"/>
        <Label x:Name="LabelProbability" Content="Risk Reduction (%):" HorizontalAlignment="Left" Margin="430,145,0,0" VerticalAlignment="Top"/>
        <md:DialogHost IsOpen="False" x:Name="ErrorMessageDialog">
            <md:DialogHost.DialogContent >
                <StackPanel Margin="15">
                    <StackPanel Orientation="Horizontal">
                        <md:PackIcon Kind="ErrorOutline" Width="30" Height="50"/>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignTitleTextBlock}" TextWrapping="Wrap" Text="ERROR!!!" TextAlignment="Justify"/>
                    </StackPanel>
                    <StackPanel Orientation="Vertical">
                        <Expander HorizontalAlignment="Stretch" Header="Expand for details" IsExpanded="True">
                            <StackPanel Orientation="Vertical" TextBlock.Foreground="{DynamicResource MaterialDesignBody}" Margin="24,8,24,16">
                                <TextBlock x:Name="TextMessage" MaxWidth="500" Opacity=".68" TextAlignment="Justify" Text="" TextWrapping="Wrap" />
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                        <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True" Margin="0 8 8 0" Command="md:DialogHost.CloseDialogCommand">
                            CLOSE
                        </Button>
                    </StackPanel>
                </StackPanel>
            </md:DialogHost.DialogContent>
        </md:DialogHost>
        <md:DialogHost IsOpen="False" x:Name="YesNoDialog" Grid.RowSpan="3" DialogClosing="YesNoDialog_DialogClosing">
            <md:DialogHost.DialogContent>
                <StackPanel Margin="15">
                    <StackPanel Orientation="Horizontal">
                        <md:PackIcon Kind="WarningCircleOutline" Width="30" Height="50"/>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignTitleTextBlock}" TextWrapping="Wrap" Text="WARNING!!!" TextAlignment="Justify"/>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" TextBlock.Foreground="{DynamicResource MaterialDesignBody}" Margin="24,8,24,16">
                        <TextBlock x:Name="TextYesNoMessage" MaxWidth="500" Opacity=".68" TextAlignment="Justify" Text="mY TEXT" TextWrapping="Wrap" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                        <Button Style="{StaticResource MaterialDesignFlatButton}" IsDefault="True" Margin="0 8 8 0" Command="md:DialogHost.CloseDialogCommand">
                            <Button.CommandParameter>
                                <system:Boolean>True</system:Boolean>
                            </Button.CommandParameter>
                            ACCEPT
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True" Margin="0 8 8 0" Command="md:DialogHost.CloseDialogCommand">
                            <Button.CommandParameter>
                                <system:Boolean>False</system:Boolean>
                            </Button.CommandParameter>
                            CANCEL
                        </Button>
                    </StackPanel>
                </StackPanel>
            </md:DialogHost.DialogContent>
        </md:DialogHost>
    </Grid>

</Window>
